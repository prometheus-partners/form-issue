{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"*\"];\nexport let FormContainerComponent = /*#__PURE__*/(() => {\n  class FormContainerComponent {\n    constructor() {\n      this.model = {};\n      this.options = {};\n      this.action = new EventEmitter();\n    }\n\n    submitForm() {\n      this.action.emit({\n        type: 'SUBMIT',\n        payload: this.model\n      });\n    }\n\n  }\n\n  FormContainerComponent.ɵfac = function FormContainerComponent_Factory(t) {\n    return new (t || FormContainerComponent)();\n  };\n\n  FormContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormContainerComponent,\n    selectors: [[\"pol-form-container\"]],\n    inputs: {\n      form: \"form\",\n      model: \"model\",\n      id: \"id\",\n      options: \"options\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 1,\n    consts: [[\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"]],\n    template: function FormContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FormContainerComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n    encapsulation: 2\n  });\n  return FormContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}